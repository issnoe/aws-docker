AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a service on AWS Fargate, hosted in a public subnet of a VPC, and accessible via a public load balancer

# Input Paramters
Parameters:
  StackName: 
    Type: String
    Default: Fargate-Network-Stack
    Description: The name of the parent fargate networking stack
  ServiceName:
    Type: String
    Default: nginx
    Description: Name of the ECS service
  ImageUrl:
    Type: String
    Default: nginx
    Description: The url of a docker image that contains the application process that
                 will handle the traffic for this service
  ContainerPort:
    Type: Number
    Default: 80
    Description: What port number the application inside the docker container is binding to
  ContainerCpu:
    Type: Number
    Default: 256
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Default: 512
    Description: How much memory in megabytes to give the container
  Path:
    Type: String
    Default: "*"
    Description: A path on the public load balancer that this service
                 should be connected to. Use * to send all load balancer
                 traffic to this service.
  Priority:
    Type: Number
    Default: 1
    Description: The priority for the routing rule added to the load balancer.
                 This only applies if your have multiple services which have been
                 assigned to different paths on the load balancer.
  DesiredCount:
    Type: Number
    Default: 2
    Description: How many copies of the service task to run
  Role:
    Type: String
    Default: ""
    Description: (Optional) An IAM role to give the service's containers if the code within needs to
                 access other AWS resources like S3 buckets, DynamoDB tables, etc

Conditions: 
  HasCustomRole: !Not [!Equals [!Ref 'Role', '']]                 

Resources: 
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition 
    Properties: 
      Family: !Ref 'ServiceName'
      Cpu: !Ref 'ContainerCpu'
      Memory: !Ref 'ContainerMemory'
      NetworkMode: awsvpc
      RequiresCompatibilities: 
        - FARGATE 
      ExecutionRoleArn:
        Fn::ImportValue: 
          !Join [':', [!Ref 'StackName', 'ECSTaskExecutionRole']]  
      TaskRoleArn:
        Fn::If: 
          - 'HasCustomRole' 
          - !Ref 'Role'
          - !Ref "AWS::NoValue"         
      ContainerDefinitions:
        - Name: !Ref 'ServiceName'
          Cpu: !Ref 'ContainerCpu'
          Memory: !Ref 'ContainerMemory'
          Image: !Ref 'ImageUrl'
          PortMappings: 
            - ContainerPort: !Ref 'ContainerPort'          